{
  "version": 3,
  "sources": ["../../src/index.js", "../../src/lib/injectScriptTag.js", "../../src/lib/utils.js", "../../src/vmap/adsource.js", "../../src/vmap/parser_utils.js", "../../src/vmap/adbreak.js", "../../src/vmap/vmap.js", "../../src/vmap/index.js", "../../src/lib/fetchVmapUrl.js", "../../src/modes/linear.js", "../../src/modes/nonlinear.js", "../../src/modes/companions.js", "../../src/features/icons.js", "../../src/features/vmap.js", "../../src/lib/fetchAdUrl.js"],
  "sourcesContent": ["import videojs from 'video.js';\nimport 'videojs-contrib-ads';\nimport { VASTClient, VASTParser, VASTTracker } from '@dailymotion/vast-client';\nimport {\n  injectScriptTag, getLocalISOString, convertTimeOffsetToSeconds,\n} from './lib';\nimport { playLinearAd, playNonLinearAd, playCompanionAd } from './modes';\nimport { addIcons, handleVMAP, handleVmapXml, parseInlineVastData } from './features';\nimport { fetchAdUrl } from './lib/fetchAdUrl';\n\nconst Plugin = videojs.getPlugin('plugin');\n\nclass Vast extends Plugin {\n  constructor(player, options) {\n    super(player, options);\n    this.player = player;\n\n    const timeout = Boolean(options && (options[\"adUrl\"] || options[\"vastUrl\"] || options[\"vmapUrl\"])) ? 5000 : 0\n    // Load the options with default values\n    const defaultOptions = {\n      vastUrl: false,\n      vmapUrl: false,\n      adUrl: false,\n      verificationTimeout: 2000,\n      addCtaClickZone: true,\n      addSkipButton: true,\n      debug: false,\n      timeout: timeout || 5000,\n      isLimitedTracking: false,\n    };\n\n    // Assign options that were passed in by the consumer\n    this.options = Object.assign(defaultOptions, options);\n\n    this.setMacros();\n\n    // Init an empty array that will later contain the ads metadata\n    this.adsArray = [];\n\n    // array of nonlinear or companions dom element\n    this.domElements = [];\n    // array of icons dom containers\n    this.iconContainers = [];\n\n    const videojsContribAdsOptions = {\n      debug: this.options.debug,\n      timeout: this.options.timeout,\n    };\n\n    // initialize videojs-contrib-ads\n    if (!this.player.ads) return;\n    const contrib = this.player.ads;\n    if (typeof contrib === 'function') {\n      try {\n        this.player.ads(videojsContribAdsOptions);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    //This method will call to schdedule Ad Breaks\n    this.debug(\"Plugin Initialised\")\n    player.scheduleAdBreak = (vastVjsOptions) => {\n      this.scheduleAdBreak(vastVjsOptions);\n    };\n    this.scheduleAdBreak(options)\n  }\n\n  async scheduleAdBreak(options){\n    if(!this.player) return;\n    this.options = {...this.options, timeout: 5000, ...options}\n    if(this.options.adUrl){\n      const response = await fetchAdUrl(this.options.adUrl)\n      if(response.adType === \"vmap\"){\n        this.handleVmapXml(response.vmap)\n      } else if(response.adType === \"vast\")\n        this.vastXMLHandler(response.xml)\n    } else if (this.options.vmapUrl) {\n      this.handleVMAP(this.options.vmapUrl);\n    } else if(this.options.vastUrl) {\n      this.vastHandler(this.options)\n    }\n  }\n\n  vastXMLHandler(xml){\n    this.disablePostroll();\n    (async () => {\n      await this.handleVASTXml(xml, () => {\n        this.disablePreroll();\n      });\n      if (this.adsArray.length > 0) {\n        this.addEventsListeners();\n        // has to be done outside of handleVAST because not done at the same moment for VMAP case\n        this.player?.trigger('adsready');\n      }\n    })();\n  }\n\n  vastHandler(options){\n    this.disablePostroll();\n    (async () => {\n      await this.handleVAST(options.vastUrl, () => {\n        this.disablePreroll();\n      });\n      if (this.adsArray.length > 0) {\n        this.addEventsListeners();\n        // has to be done outside of handleVAST because not done at the same moment for VMAP case\n        this.player?.trigger('adsready');\n      }\n    })();\n  }\n\n  disablePreroll() {\n    this.player?.trigger('nopreroll');\n  }\n\n  disablePostroll() {\n    if(!this.player) return;\n    this.player.on('readyforpostroll', () => {\n      this.player?.trigger('nopostroll');\n    });\n  }\n\n  setMacros(newMacros = undefined) {\n    const { options } = this;\n    if (!newMacros) {\n      // generate unique int from current timestamp\n      const cacheBuster = parseInt(Date.now().toString().slice(-8), 10);\n      const ts = getLocalISOString(new Date());\n      this.macros = {\n        CACHEBUSTING: cacheBuster,\n        TIMESTAMP: ts,\n        PAGEURL: (window.location !== window.parent.location)\n          ? document.referrer\n          : document.location.href,\n        // PODSEQUENCE: '',\n        // UNIVERSALADID: '',\n        // ADTYPE: '',\n        // ADSERVINGID: '',\n        // ADCATEGORIES: '',\n        LIMITADTRACKING: options.isLimitedTracking,\n      };\n    } else {\n      this.macros = {\n        ...this.macros,\n        ...newMacros,\n      };\n    }\n  }\n\n  async handleVAST(vastUrl, onError = null) {\n    // Now let's fetch some adsonp\n    this.vastClient = new VASTClient();\n    // Test Code\n    this.vastClient.addURLTemplateFilter((url) => {\n      const widthInt = getComputedStyle(this.player.el()).width;\n      const heightInt = getComputedStyle(this.player.el()).height;\n      let currentUrl = url;\n      currentUrl = url.replace('{player.width}', widthInt);\n      currentUrl = url.replace('SMARTTV_ADS_DISPLAY_HEIGHT', heightInt);\n      return currentUrl;\n    });\n    try {\n      const response = await this.vastClient.get(vastUrl, {\n        allowMultipleAds: true,\n        resolveAll: true,\n      });\n      this.adsArray = response.ads ?? [];\n      if (this.adsArray.length === 0) {\n        onError?.();\n        // Deal with the error\n        const message = 'VastVjs: Empty VAST XML';\n        this.player.trigger('vast.error', {\n          message,\n          tag: vastUrl,\n        });\n      }\n    } catch (err) {\n      console.error(err);\n      onError?.();\n      // Deal with the error\n      const message = 'VastVjs: Error while fetching VAST XML';\n      this.player.trigger('vast.error', {\n        message,\n        tag: vastUrl,\n      });\n    }\n  }\n\n  async handleVASTXml(vast, onError = null) {\n    // Now let's fetch some adsonp\n    this.vastClient = new VASTClient();\n    this.vastParser = new VASTParser()\n    try {\n      const response = await this.vastParser.parseVAST(vast, {\n        allowMultipleAds: true,\n        resolveAll: true,\n        url: this.options.adUrl\n      });\n      this.adsArray = response.ads ?? [];\n      if (this.adsArray.length === 0) {\n        onError?.();\n        // Deal with the error\n        const message = 'VastVjs: Empty VAST XML';\n        this.player.trigger('vast.error', {\n          message,\n          tag: vastUrl,\n        });\n      }\n    } catch (err) {\n      console.error(err);\n      onError?.();\n      // Deal with the error\n      const message = 'VastVjs: Error while fetching VAST XML';\n      this.player.trigger('vast.error', {\n        message,\n        tag: vastUrl,\n      });\n    }\n  }\n\n  removeDomElements() {\n    // remove icons\n    this.domElements.forEach((domElement) => {\n      domElement.remove();\n    });\n  }\n\n  readAd() {\n    const currentAd = this.getNextAd();\n    if(!currentAd) return\n    // Retrieve the CTA URl to render\n    this.ctaUrl = Vast.getBestCtaUrl(currentAd?.linearCreative());\n    this.debug('ctaUrl', this.ctaUrl);\n\n    if (currentAd.hasLinearCreative()) {\n      this.linearVastTracker = new VASTTracker(\n        this.vastClient,\n        currentAd.ad,\n        currentAd.linearCreative(),\n      );\n      this.linearVastTracker.on('firstQuartile', () => {\n        this.debug('firstQuartile');\n      });\n      this.linearVastTracker.on('midpoint', () => {\n        this.debug('midpoint');\n      });\n      this.addIcons(currentAd);\n      this.addSkipButton(currentAd.linearCreative());\n      // We now check if verification is needed or not, if it is, then we import the\n      // verification script with a timeout trigger. If it is not, then we simply display the ad\n      // by calling playAd\n      if ('adVerifications' in currentAd.ad && currentAd.ad.adVerifications.length > 0) {\n        // Set a timeout for the verification script - accortding to the IAB spec, we should do\n        // a best effort to load the verification script before the actual ad, but it should not\n        // block the ad nor the video playback\n        const verificationTimeout = setTimeout(() => {\n          this.playLinearAd(currentAd.linearCreative());\n        }, this.options.verificationTimeout);\n\n        // Now for each verification script, we need to inject a script tag in the DOM and wait\n        // for it to load\n        let index = 0;\n        this.setMacros({\n          OMIDPARTNER: `${currentAd.ad.adVerifications[index].vendor ?? 'unknown'}`,\n        });\n        const scriptTagCallback = () => {\n          index += 1;\n          if (index < currentAd.ad.adVerifications.length) {\n            injectScriptTag(\n              currentAd.ad.adVerifications[index].resource,\n              scriptTagCallback,\n              // eslint-disable-next-line no-use-before-define\n              scriptTagErrorCallback,\n            );\n          } else {\n            // Once we are done with all verification tags, clear the timeout timer and play the ad\n            clearTimeout(verificationTimeout);\n            this.playLinearAd(currentAd.linearCreative());\n          }\n        };\n        const scriptTagErrorCallback = () => {\n          // track error\n          this.linearVastTracker.verificationNotExecuted(\n            currentAd.ad.adVerifications[index].vendor,\n            { REASON: 3 },\n          );\n          // load next script\n          scriptTagCallback();\n        };\n        injectScriptTag(\n          currentAd.ad.adVerifications[index].resource,\n          scriptTagCallback,\n          scriptTagErrorCallback,\n        );\n      } else {\n        // No verification to import, just run the add\n        this.playLinearAd(currentAd.linearCreative());\n      }\n    } else {\n      this.player.ads.skipLinearAdMode();\n    }\n    if (currentAd.hasNonlinearCreative()) {\n      // TODO: remove those listeners\n      this.player.one(currentAd.hasLinearCreative() ? 'adplaying' : 'playing', () => {\n        this.nonLinearVastTracker = new VASTTracker(this.vastClient, currentAd.ad, currentAd.nonlinearCreative(), 'NonLinearAd');\n        this.playNonLinearAd(currentAd.nonlinearCreative());\n      });\n    }\n    if (currentAd.hasCompanionCreative()) {\n      // TODO: remove those listeners\n      this.player.one(currentAd.hasLinearCreative() ? 'adplaying' : 'playing', () => {\n        this.companionVastTracker = new VASTTracker(this.vastClient, currentAd.ad, currentAd.companionCreative(), 'CompanionAd');\n        this.playCompanionAd(currentAd.companionCreative());\n      });\n    }\n  }\n\n  /*\n  * This method is responsible for retrieving the next ad to play from all the ads present in the\n  * VAST manifest.\n  * Please be aware that a single ad can have multple types of creatives.\n  * A linear add for example can come with a companion ad and both can should be displayed.\n  */\n  getNextAd() {\n    if (this.adsArray.length === 0) {\n      return null;\n    }\n    const nextAd = this.adsArray.shift();\n    return {\n      ad: nextAd,\n      hasLinearCreative: () => {\n        // find linear content\n        const linear = nextAd.creatives.find((creative) => creative.type === 'linear') !== undefined && nextAd.creatives.filter((creative) => creative.type === 'linear')[0];\n        // check if at least one mediaFile is provided\n        const hasMediaFile = linear.mediaFiles.length > 0 && linear.mediaFiles.some((mediaFile) => mediaFile.fileURL !== '');\n        return linear && hasMediaFile;\n      },\n      linearCreative: () => nextAd.creatives.filter((creative) => creative.type === 'linear')[0],\n      hasCompanionCreative: () => nextAd.creatives.find((creative) => creative.type === 'companion') !== undefined,\n      companionCreative: () => nextAd.creatives.filter((creative) => creative.type === 'companion')[0],\n      hasNonlinearCreative: () => nextAd.creatives.find((creative) => creative.type === 'nonlinear') !== undefined,\n      nonlinearCreative: () => nextAd.creatives.filter((creative) => creative.type === 'nonlinear')[0],\n    };\n  }\n\n  onAdPlay = () => {\n    this.debug('adplay');\n    // don't track the very first play to avoid sending resume tracker event\n    if (parseInt(this.player.currentTime(), 10) > 0) {\n      this.linearVastTracker.setPaused(false, {\n        ...this.macros,\n        ADPLAYHEAD: this.linearVastTracker.convertToTimecode(this.player.currentTime()),\n      });\n    }\n  };\n\n  onAdPause = () => {\n    this.debug('adpause');\n    // don't track the pause event triggered before complete\n    if (this.player.duration() - this.player.currentTime() > 0.2) {\n      this.linearVastTracker.setPaused(true, {\n        ...this.macros,\n        ADPLAYHEAD: this.linearVastTracker.convertToTimecode(this.player.currentTime()),\n      });\n    }\n  };\n\n  // Track timeupdate-related events\n  onAdTimeUpdate = () => {\n    // Set progress to track automated trackign events\n    this.linearVastTracker.setProgress(this.player.currentTime(), this.macros);\n    this.player?.trigger('vast.time', { position: this.player.currentTime(), currentTime: this.player.currentTime(), duration: this.player.duration() });\n  };\n\n  // track on regular content progress\n  onProgress = async () => {\n    if (this.watchForProgress && this.watchForProgress.length > 0) {\n      const { timeOffset } = this.watchForProgress[0];\n      const timeOffsetInSeconds = convertTimeOffsetToSeconds(timeOffset, this.player.duration());\n      if (this.player.currentTime() > timeOffsetInSeconds) {\n        const nextAd = this.watchForProgress.shift();\n        if (nextAd.vastUrl) {\n          await this.handleVAST(nextAd.vastUrl);\n          this.readAd();\n        } else if (nextAd.vastData) {\n          this.parseInlineVastData(nextAd.vastData, 'midroll');\n        }\n      }\n    }\n  };\n\n  onFirstPlay = () => {\n    this.debug('first play');\n    // Track the first timeupdate event - used for impression tracking\n  };\n\n  onAdVolumeChange = () => {\n    this.debug('volume');\n    if (!this.linearVastTracker) {\n      return false;\n    }\n    // Track the user muting or unmuting the video\n    this.linearVastTracker.setMuted(this.player.muted(), {\n      ...this.macros,\n      ADPLAYHEAD: this.linearVastTracker.convertToTimecode(this.player.currentTime()),\n    });\n    return true;\n  };\n\n  onAdFullScreen = (evt, data) => {\n    this.debug('fullscreen');\n    if (!this.linearVastTracker) {\n      return false;\n    }\n    // Track skip event\n    this.linearVastTracker.setFullscreen(data.state);\n    return true;\n  };\n\n  // Track when user closes the video\n  onUnload = () => {\n    if (!this.linearVastTracker) {\n      return false;\n    }\n\n    this.linearVastTracker.close({\n      ...this.macros,\n      ADPLAYHEAD: this.linearVastTracker.convertToTimecode(this.player.currentTime()),\n    });\n    this.removeEventsListeners();\n    return null;\n  };\n\n  // Notify the player if we reach a timeout while trying to load the ad\n  onAdTimeout = () => {\n    this.debug('adtimeout');\n    // trigger a tracker error\n    if (this.linearVastTracker) {\n      this.linearVastTracker.error({\n        ...this.macros,\n        ERRORCODE: 301, // timeout of VAST URI\n      });\n    }\n    console.error('VastVjs: Timeout');\n    this.player?.trigger('vast.error', {\n      message: 'VastVjs: Timeout',\n    });\n    this.removeEventsListeners();\n  };\n\n  // send event when ad is playing to remove loading spinner\n  onAdStart = () => {\n    this.debug('adstart');\n    // Trigger an event to notify the player consumer that the ad is playing\n    this.player?.trigger('vast.play', {\n      ctaUrl: this.ctaUrl,\n      skipDelay: this.linearVastTracker.skipDelay,\n      adClickCallback: this.ctaUrl ? () => this.adClickCallback(this.ctaUrl) : false,\n    });\n    // Track the impression of an ad\n    this.linearVastTracker.load({\n      ...this.macros,\n      ADPLAYHEAD: this.linearVastTracker.convertToTimecode(this.player.currentTime()),\n    });\n\n    this.linearVastTracker.trackImpression({\n      ...this.macros,\n      ADPLAYHEAD: this.linearVastTracker.convertToTimecode(this.player.currentTime()),\n    });\n    this.linearVastTracker.overlayViewDuration(\n      this.linearVastTracker.convertToTimecode(this.player.currentTime()),\n      this.macros,\n    );\n\n    // make timeline not clickable\n    this.player.controlBar.progressControl.disable();\n\n    if (this.options.addCtaClickZone) {\n      // add the cta click\n      const ctaDiv = document.createElement('div');\n      ctaDiv.style.cssText = 'position: absolute; bottom:3em; left: 0; right: 0;top: 0;';\n      ctaDiv.addEventListener('click', () => {\n        this.player.pause();\n        this.adClickCallback(this.ctaUrl);\n      });\n      this.domElements.push(ctaDiv);\n      this.player.el().appendChild(ctaDiv);\n    }\n  };\n\n  addSkipButton(creative) {\n    this.debug('addSkipButton');\n    if (this.options.addSkipButton && creative.skipDelay > 0) {\n      const { skipDelay } = creative;\n      let skipRemainingTime = Math.round(skipDelay - this.player.currentTime());\n      let isSkippable = skipRemainingTime < 1;\n      // add the skip button\n      const skipButtonDiv = document.createElement('div');\n      skipButtonDiv.id = 'videojs-vast-skipButton';\n      skipButtonDiv.style.cssText = 'bottom: 90px; cursor: default; padding: 15px; position: absolute; right: 0; z-index: 3; background: rgba(0, 0, 0, 0.8); min-width: 30px; pointer-events: none;';\n      skipButtonDiv.innerHTML = isSkippable ? 'skip >>' : skipRemainingTime.toFixed();\n      this.domElements.push(skipButtonDiv);\n      this.player.el().appendChild(skipButtonDiv);\n      // update time\n      const interval = setInterval(() => {\n        skipRemainingTime = Math.round(skipDelay - this.player.currentTime());\n        isSkippable = skipRemainingTime < 1;\n        if (isSkippable) {\n          skipButtonDiv.style.cursor = 'pointer';\n          skipButtonDiv.style.pointerEvents = 'auto';\n          skipButtonDiv.addEventListener('click', () => {\n            this.player?.trigger('skip');\n          });\n          clearInterval(interval);\n        }\n        skipButtonDiv.innerHTML = isSkippable ? 'skip >>' : skipRemainingTime.toFixed();\n      }, 1000);\n    }\n  }\n\n  onAdError = (evt) => {\n    this.debug('aderror');\n    // const error = this.player.error();\n    // trigger a tracker error\n    this.linearVastTracker.error({\n      ...this.macros,\n      ERRORCODE: 900, // undefined error, to be improved\n    });\n\n    // Trigger an event when the ad is finished to notify the player consumer\n    this.player?.trigger('vast.error', {\n      message: evt,\n      tag: this.options.vastUrl,\n    });\n\n    // no more ads (end of preroll, adpods or midroll)\n    if (this.adsArray.length === 0) {\n      this.resetPlayer();\n    } else { // pods is not ended go ahead\n      this.readAd();\n    }\n  };\n\n  onReadyForPreroll = () => {\n    this.debug('readyforpreroll');\n    this.readAd();\n  };\n\n  onReadyForPostroll = async () => {\n    this.debug('readyforpostroll');\n    if (this.postRollUrl) {\n      await this.handleVAST(this.postRollUrl);\n      this.readAd();\n    } else if (this.postRollData) {\n      // handle inline data\n      this.adsArray = this.postRollData;\n      this.readAd();\n    }\n  };\n\n  onEnded = () => {\n    this.removeEventsListeners();\n  };\n\n  onSkip = () => {\n    this.debug('skip');\n\n    // Trigger an event when the ad is finished to notify the player consumer\n    this.player?.trigger('vast.skip');\n\n    // Track skip event\n    this.linearVastTracker.skip({\n      ...this.macros,\n      ADPLAYHEAD: this.linearVastTracker.convertToTimecode(this.player.currentTime()),\n    });\n\n    // delete ctadiv, skip btn, icons, companions or nonlinear elements\n    this.removeDomElements();\n\n    // no more ads (end of preroll, adpods or midroll)\n    if (this.adsArray.length === 0) {\n      this.resetPlayer();\n    } else {\n      this.readAd();\n    }\n  };\n\n  onAdEnded = () => {\n    this.debug('adended');\n    // Track the end of an ad\n    this.linearVastTracker.complete({\n      ...this.macros,\n      ADPLAYHEAD: this.linearVastTracker.convertToTimecode(this.player.currentTime()),\n    });\n\n    // delete ctadiv, skip btn, icons, companions or nonlinear elements\n    this.removeDomElements();\n\n    // no more ads (end of preroll, adpods or midroll)\n    if (this.adsArray.length === 0) {\n      this.resetPlayer();\n    } else { // pods is not ended go ahead\n      this.readAd();\n    }\n  };\n\n  resetPlayer() {\n    // Finish ad mode so that regular content can resume\n    this.player.ads.endLinearAdMode();\n\n    // Trigger an event when the ad is finished to notify the player consumer\n    this.player?.trigger('vast.complete');\n\n    // reactivate controlbar\n    this.player.controlBar.progressControl.enable();\n  }\n\n  addEventsListeners() {\n    if(!this.player) return;\n    // ad events\n    this.player.one('adplaying', this.onFirstPlay);\n    this.player.on('adplaying', this.onAdPlay);\n    this.player.on('adpause', this.onAdPause);\n    this.player.on('adtimeupdate', this.onAdTimeUpdate);\n    this.player.on('advolumechange', this.onAdVolumeChange);\n    this.player.on('adfullscreen', this.onAdFullScreen);\n    this.player.on('adtimeout', this.onAdTimeout);\n    this.player.on('adstart', this.onAdStart);\n    this.player.on('aderror', this.onAdError);\n    this.player.on('readyforpreroll', this.onReadyForPreroll);\n    this.player.on('readyforpostroll', this.onReadyForPostroll);\n    this.player.on('skip', this.onSkip);\n    this.player.on('adended', this.onAdEnded);\n    this.player.on('ended', this.onEnded);\n    window.addEventListener('beforeunload', this.onUnload);\n  }\n\n  removeEventsListeners() {\n    this.debug('removeEventsListeners');\n    this.player.off('adplaying', this.onAdPlay);\n    this.player.off('adplaying', this.onFirstPlay);\n    this.player.off('adpause', this.onAdPause);\n    this.player.off('adtimeupdate', this.onAdTimeUpdate);\n    this.player.off('advolumechange', this.onAdVolumeChange);\n    this.player.off('adfullscreen', this.onAdFullScreen);\n    this.player.off('adtimeout', this.onAdTimeout);\n    this.player.off('adstart', this.onAdStart);\n    this.player.off('aderror', this.onAdError);\n    // added only if some midrolls have been found, remove by security\n    this.player.off('timeupdate', this.onProgress);\n    this.player.off('readyforpreroll', this.onReadyForPreroll);\n    this.player.off('readyforpostroll', this.onReadyForPostroll);\n    this.player.off('skip', this.onSkip);\n    this.player.off('adended', this.onAdEnded);\n    this.player.off('ended', this.onEnded);\n    window.removeEventListener('beforeunload', this.onUnload);\n  }\n\n  /*\n  * This method is responsible for dealing with the click on the ad\n  */\n  adClickCallback = (ctaUrl) => {\n    this.player?.trigger('vast.click');\n    window.open(ctaUrl, '_blank');\n    // Track when a user clicks on an ad\n    this.linearVastTracker.click(null, {\n      ...this.macros,\n      ADPLAYHEAD: this.linearVastTracker.convertToTimecode(this.player.currentTime()),\n    });\n  };\n\n  static getCloseButton(clickCallback) {\n    const closeButton = document.createElement('button');\n    closeButton.addEventListener('click', clickCallback);\n    closeButton.style.width = '20px';\n    closeButton.style.height = '20px';\n    closeButton.style.position = 'absolute';\n    closeButton.style.right = '5px';\n    closeButton.style.top = '5px';\n    closeButton.style.zIndex = '3';\n    closeButton.style.background = '#CCC';\n    closeButton.style.color = '#000';\n    closeButton.style.fontSize = '12px';\n    closeButton.style.cursor = 'pointer';\n    closeButton.textContent = 'X';\n    return closeButton;\n  }\n\n  static applyNonLinearCommonDomStyle(domElement) {\n    domElement.style.cursor = 'pointer';\n    domElement.style.left = '50%';\n    domElement.style.position = 'absolute';\n    domElement.style.transform = 'translateX(-50%)';\n    domElement.style.bottom = '80px';\n    domElement.style.display = 'block';\n    domElement.style.zIndex = '2';\n  }\n\n  /*\n  * This method is responsible for choosing the best media file to play according to the user's\n  * screen resolution and internet connection speed\n  */\n  static getBestMediaFile = (mediaFilesAvailable) => {\n    // select the best media file based on internet bandwidth and screen size/resolution\n    const videojsVhs = localStorage.getItem('videojs-vhs');\n    const bandwidth = videojsVhs ? JSON.parse(videojsVhs).bandwidth : undefined;\n\n    let bestMediaFile = mediaFilesAvailable[0];\n\n    if (mediaFilesAvailable && bandwidth) {\n      const { height } = window.screen;\n      const { width } = window.screen;\n\n      const result = mediaFilesAvailable\n        .sort((a, b) => ((Math.abs(a.bitrate - bandwidth) - Math.abs(b.bitrate - bandwidth))\n          || (Math.abs(a.width - width) - Math.abs(b.width - width))\n          || (Math.abs(a.height - height) - Math.abs(b.height - height))));\n\n      [bestMediaFile] = result;\n    }\n\n    return bestMediaFile;\n  };\n\n  /*\n  * This method is responsible for choosing the best URl to redirect the user to when he clicks\n  * on the ad\n  */\n  static getBestCtaUrl = (creative) => {\n    if (\n      creative && creative.videoClickThroughURLTemplate\n      && creative.videoClickThroughURLTemplate.url) {\n      return creative.videoClickThroughURLTemplate.url;\n    }\n    return false;\n  };\n\n  static getMidrolls = (adBreaks) => {\n    const midrolls = [];\n    if (adBreaks) {\n      return adBreaks\n        .filter((adBreak) => !['start', '0%', '00:00:00', 'end', '100%'].includes(adBreak.timeOffset))\n        .reduce((prev, current) => ([\n          ...prev,\n          {\n            timeOffset: current.timeOffset,\n            vastUrl: current.adSource.adTagURI?.uri,\n            vastData: current.adSource.vastAdData,\n          },\n        ]), []);\n    }\n    return midrolls;\n  };\n\n  static getPreroll = (adBreaks) => {\n    if (adBreaks) {\n      return adBreaks.filter((adBreak) => ['start', '0%', '00:00:00'].includes(adBreak.timeOffset))[0];\n    }\n    return false;\n  };\n\n  static getPostroll = (adBreaks) => {\n    if (adBreaks) {\n      return adBreaks.filter((adBreak) => ['end', '100%'].includes(adBreak.timeOffset))[0];\n    }\n    return false;\n  };\n\n  debug(msg, data = undefined) {\n    if (!this.options.debug) {\n      return;\n    }\n    console.info('videojs-vast ---', msg, data ?? '');\n  }\n\n  /*\n  * This method is responsible disposing the plugin once it is not needed anymore\n  */\n  dispose() {\n    this.debug('dispose');\n    this.removeEventsListeners();\n    super.dispose();\n  }\n}\n\nVast.prototype.playLinearAd = playLinearAd;\nVast.prototype.playNonLinearAd = playNonLinearAd;\nVast.prototype.playCompanionAd = playCompanionAd;\nVast.prototype.addIcons = addIcons;\nVast.prototype.handleVMAP = handleVMAP;\nVast.prototype.handleVmapXml = handleVmapXml;\nVast.prototype.parseInlineVastData = parseInlineVastData;\n\nexport default Vast;\n\n// Register the plugin with video.js\n// The or statemente is necessary to deal with old versions of video.js\nconst registerPlugin = videojs.registerPlugin || videojs.plugin;\nregisterPlugin('vast', Vast);\n", "export function injectScriptTag(src, onLoadCallback, onErrorCallback) {\n  const script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.src = src;\n  script.async = true;\n  script.onload = onLoadCallback;\n  script.onerror = onErrorCallback;\n  document.body.appendChild(script);\n}\n", "export const isNumeric = (str) => {\n  if (typeof str === 'number') {\n    return true;\n  }\n  return !Number.isNaN(str) && !Number.isNaN(parseFloat(str));\n};\n\nexport const getLocalISOString = (date) => {\n  const offset = date.getTimezoneOffset();\n  const offsetAbs = Math.abs(offset);\n  const isoString = new Date(date.getTime() - offset * 60 * 1000).toISOString();\n  return `${isoString.slice(0, -1)}${offset > 0 ? '-' : '+'}${String(Math.floor(offsetAbs / 60)).padStart(2, '0')}`;\n};\n\nexport const convertTimeOffsetToSeconds = (timecode, duration = null) => {\n  // convert timeoffset in percent\n  if (duration && timecode.includes('%')) {\n    const percent = timecode.replace('%', '');\n    return (duration / 100) * percent;\n  }\n  // convert timeoffset in seconds from the start\n  if (timecode.includes('#')) {\n    return timecode.replace('#', '');\n  }\n  // convert timeoffset in timecode\n  const [time, ms] = timecode.split('.');\n  const [hours, minutes, seconds] = time.split(':');\n  return Number(`${parseInt(hours, 10) * 3600 + parseInt(minutes, 10) * 60 + parseInt(seconds, 10)}.${ms}`);\n};\n", "class VMAPAdSource {\n    constructor(xml) {\n      this.id = xml.getAttribute('id');\n      this.allowMultipleAds = xml.getAttribute('allowMultipleAds');\n      this.followRedirects = xml.getAttribute('followRedirects');\n      this.vastAdData = null;\n      this.adTagURI = null;\n      this.customData = null;\n  \n      for (const nodeKey in xml.childNodes) {\n        const node = xml.childNodes[nodeKey];\n  \n        switch (node.localName) {\n          case 'AdTagURI':\n            this.adTagURI = {\n              templateType: node.getAttribute('templateType'),\n              uri: (node.textContent || node.text || '').trim(),\n            };\n            break;\n          case 'VASTAdData':\n            this.vastAdData = node.firstChild;\n            // Some browsers treats empty white-spaces or new lines as text nodes.\n            // Ensure we get the first element node\n            while (this.vastAdData && this.vastAdData.nodeType !== 1) {\n              this.vastAdData = this.vastAdData.nextSibling;\n            }\n            break;\n          case 'CustomAdData':\n            this.customData = node;\n            break;\n        }\n      }\n    }\n  }\n  \n  export default VMAPAdSource;", "/**\n * Returns all the elements of the given node which nodeName match the given name.\n * @param  {Node} node - The node to use to find the matches.\n * @param  {String} name - The name to look for.\n * @return {Array<ChildNode>}\n */\nfunction childrenByName(node, name) {\n    const children = [];\n    for (const childKey in node.childNodes) {\n      const child = node.childNodes[childKey];\n  \n      if (\n        child.nodeName === name ||\n        name === `vmap:${child.nodeName}` ||\n        child.nodeName === `vmap:${name}`\n      ) {\n        children.push(child);\n      }\n    }\n    return children;\n  }\n  \n  /**\n   * Parses a node value giving priority to CDATA as a JSON over text, if CDATA is not a valid JSON it is converted to text\n   * @param  {Node} node - The node to parse the value from.\n   * @return {String|Object}\n   */\n  function parseNodeValue(node) {\n    if (!node || !node.childNodes) {\n      return {};\n    }\n    const childNodes = node.childNodes;\n  \n    // Trying to find and parse CDATA as JSON\n    const cdatas = [];\n    for (const childKey in childNodes) {\n      const childNode = childNodes[childKey];\n  \n      if (childNode.nodeName === '#cdata-section') {\n        cdatas.push(childNode);\n      }\n    }\n  \n    if (cdatas && cdatas.length > 0) {\n      try {\n        return JSON.parse(cdatas[0].data);\n      } catch (e) {}\n    }\n  \n    // Didn't find any CDATA or failed to parse it as JSON\n    let nodeText = '';\n    for (const childKey in childNodes) {\n      const childNode = childNodes[childKey];\n  \n      switch (childNode.nodeName) {\n        case '#text':\n          nodeText += childNode.textContent.trim();\n          break;\n        case '#cdata-section':\n          nodeText += childNode.data;\n          break;\n      }\n    }\n    return nodeText;\n  }\n  \n  /**\n   * Parses an XML node recursively.\n   * @param  {Node} node - The node to parse.\n   * @return {Object}\n   */\n  function parseXMLNode(node) {\n    const parsedNode = {\n      attributes: {},\n      children: {},\n      value: {},\n    };\n  \n    parsedNode.value = parseNodeValue(node);\n  \n    const attributes = node.attributes;\n    if (attributes) {\n      for (const attrKey in attributes) {\n        const nodeAttr = attributes[attrKey];\n  \n        if (nodeAttr.nodeName && nodeAttr.nodeValue !== undefined && nodeAttr.nodeValue !== null) {\n          parsedNode.attributes[nodeAttr.nodeName] = nodeAttr.nodeValue;\n        }\n      }\n    }\n  \n    const childNodes = node.childNodes;\n    if (childNodes) {\n      for (const childKey in childNodes) {\n        const childNode = childNodes[childKey];\n        if (childNode.nodeName && childNode.nodeName.substring(0, 1) !== '#') {\n          parsedNode.children[childNode.nodeName] = parseXMLNode(childNode);\n        }\n      }\n    }\n  \n    return parsedNode;\n  }\n  \n  export { childrenByName, parseNodeValue, parseXMLNode };", "import VMAPAdSource from './adsource';\nimport { childrenByName, parseXMLNode } from './parser_utils';\n\nclass VMAPAdBreak {\n  constructor(xml) {\n    this.timeOffset = xml.getAttribute('timeOffset');\n    this.breakType = xml.getAttribute('breakType');\n    this.breakId = xml.getAttribute('breakId');\n    this.repeatAfter = xml.getAttribute('repeatAfter');\n    this.adSource = null;\n    this.trackingEvents = [];\n    this.extensions = [];\n\n    for (const nodeKey in xml.childNodes) {\n      const node = xml.childNodes[nodeKey];\n\n      switch (node.localName) {\n        case 'AdSource':\n          this.adSource = new VMAPAdSource(node);\n          break;\n        case 'TrackingEvents':\n          for (const subnodeKey in node.childNodes) {\n            const subnode = node.childNodes[subnodeKey];\n\n            if (subnode.localName === 'Tracking') {\n              this.trackingEvents.push({\n                event: subnode.getAttribute('event'),\n                uri: (subnode.textContent || subnode.text || '').trim(),\n              });\n            }\n          }\n          break;\n        case 'Extensions':\n          this.extensions = childrenByName(node, 'Extension').map((extension) =>\n            parseXMLNode(extension)\n          );\n          break;\n      }\n    }\n  }\n\n  track(event, errorCode) {\n    for (const trackerKey in this.trackingEvents) {\n      const tracker = this.trackingEvents[trackerKey];\n\n      if (tracker.event === event) {\n        let { uri } = tracker;\n        if (tracker.event === 'error') {\n          uri = uri.replace('[ERRORCODE]', errorCode);\n        }\n        this.tracker(uri);\n      }\n    }\n  }\n\n  // Easy to overwrite tracker client for unit testing\n  tracker(uri) {\n    if (typeof window !== 'undefined' && window !== null) {\n      const i = new Image();\n      i.src = uri;\n    }\n  }\n}\n\nexport default VMAPAdBreak;", "import VMAPAdBreak from './adbreak';\nimport { childrenByName, parseXMLNode } from './parser_utils';\n\nclass VMAP {\n  constructor(xml) {\n    if (!xml || !xml.documentElement || xml.documentElement.localName !== 'VMAP') {\n      throw new Error('Not a VMAP document');\n    }\n\n    this.version = xml.documentElement.getAttribute('version');\n    this.adBreaks = [];\n    this.extensions = [];\n\n    for (const nodeKey in xml.documentElement.childNodes) {\n      const node = xml.documentElement.childNodes[nodeKey];\n\n      switch (node.localName) {\n        case 'AdBreak':\n          this.adBreaks.push(new VMAPAdBreak(node));\n          break;\n        case 'Extensions':\n          this.extensions = childrenByName(node, 'Extension').map((extension) =>\n            parseXMLNode(extension)\n          );\n          break;\n      }\n    }\n  }\n}\n\nexport default VMAP;", "import VMAP from './vmap';\n\nexport default VMAP;", "import VMAP from \"../vmap\";\n\nexport const fetchVmapUrl = (url) => new Promise((resolve, reject) => {\n  const xhr = new XMLHttpRequest();\n  xhr.open('GET', url);\n  xhr.send();\n  xhr.onreadystatechange = () => {\n    try {\n      if (xhr.readyState === xhr.DONE) {\n        if (xhr.status === 200) {\n          // Get a parsed VMAP object\n          const vmap = new VMAP(xhr.responseXML);\n          resolve(vmap);\n        }\n      }\n    } catch (error) {\n      reject(error);\n    }\n  };\n});\n", "import Vast from '../index';\n/*\n* This method is responsible for rendering a linear ad\n*/\nexport function playLinearAd(creative) {\n  this.debug('playLinearAd', creative);\n  // Retrieve the media file from the VAST manifest\n  const mediaFile = Vast.getBestMediaFile(creative.mediaFiles);\n\n  // Start ad mode\n  if (!this.player.ads.inAdBreak()) {\n    this.player.ads.startLinearAdMode();\n  }\n\n  // Trigger an event when the ad starts playing\n  this.player.trigger('vast.playAttempt');\n\n  // Set a property in the player object to indicate that an ad is playing\n  // play linear ad content\n  this.player.src(mediaFile.fileURL);\n  this.setMacros({\n    ASSETURI: mediaFile.fileURL,\n    ADPLAYHEAD: this.linearVastTracker.convertToTimecode(this.player.currentTime()),\n    CONTENTPLAYHEAD: this.linearVastTracker.convertToTimecode(this.player.currentTime()),\n  });\n}\n", "import Vast from '../index';\n/*\n* This method is responsible for rendering a nonlinear ad\n*/\nexport function playNonLinearAd(creative) {\n  creative.variations.map((variation) => {\n    this.nonLinearVastTracker.trackImpression(this.macros);\n\n    // image\n    // if (variation.staticResource) {\n    //   const ressourceContainer = document.createElement('div');\n    //   this.domElements.push(ressourceContainer);\n    //   // Vast.applyNonLinearCommonDomStyle(ressourceContainer);\n\n    //   const ressource = document.createElement('img');\n    //   ressource.addEventListener('click', () => {\n    //     window.open(variation.nonlinearClickThroughURLTemplate, '_blank');\n    //     this.nonLinearVastTracker.click(null, this.macros);\n    //   });\n    //   ressourceContainer.style.maxWidth = variation.expandedWidth;\n    //   ressourceContainer.style.maxHeight = variation.expandedHeight;\n    //   ressource.src = variation.staticResource;\n\n    //   // add close button\n    //   const closeButton = Vast.getCloseButton(() => ressourceContainer.remove());\n    //   closeButton.style.display = variation.minSuggestedDuration ? 'none' : 'block';\n\n    //   if (variation.minSuggestedDuration) {\n    //     setTimeout(() => {\n    //       closeButton.style.display = 'block';\n    //       ressourceContainer.appendChild(closeButton);\n    //     }, variation.minSuggestedDuration * 1000);\n    //   }\n    //   ressourceContainer.appendChild(ressource);\n    //   if (variation.adSlotID) {\n    //     document.querySelector(`#${variation.adSlotID}`).appendChild(ressourceContainer);\n    //   } else {\n    //     this.player.el().appendChild(ressourceContainer);\n    //   }\n    // }\n\n    // html\n    if (variation.htmlResource) {\n      const ressourceContainer = document.createElement('div');\n      this.domElements.push(ressourceContainer);\n      // Vast.applyNonLinearCommonDomStyle(ressourceContainer);\n      ressourceContainer.addEventListener('click', () => {\n        window.open(variation.nonlinearClickThroughURLTemplate, '_blank');\n        this.nonLinearVastTracker.click(null, this.macros);\n      });\n\n      ressourceContainer.style.maxWidth = variation.expandedWidth;\n      ressourceContainer.style.maxHeight = variation.expandedHeight;\n      ressourceContainer.innerHTML = variation.htmlResource;\n\n      if (variation.adSlotID) {\n        document.querySelector(`#${variation.adSlotID}`).appendChild(ressourceContainer);\n      } else {\n        this.player.el().appendChild(ressourceContainer);\n      }\n      if (variation.minSuggestedDuration) {\n        setTimeout(() => {\n          ressourceContainer.remove();\n        }, variation.minSuggestedDuration * 1000);\n      }\n    }\n\n    // iframe\n    if (variation.iframeResource) {\n      const ressourceContainer = document.createElement('iframe');\n      this.domElements.push(ressourceContainer);\n      // Vast.applyNonLinearCommonDomStyle(ressourceContainer);\n      ressourceContainer.addEventListener('click', () => {\n        window.open(variation.nonlinearClickThroughURLTemplate, '_blank');\n        this.nonLinearVastTracker.click(null, this.macros);\n      });\n\n      ressourceContainer.style.maxWidth = variation.expandedWidth;\n      ressourceContainer.style.maxHeight = variation.expandedHeight;\n\n      ressourceContainer.src = variation.iframeResource;\n      if (variation.adSlotID) {\n        document.querySelector(`#${variation.adSlotID}`).appendChild(ressourceContainer);\n      } else {\n        this.player.el().appendChild(ressourceContainer);\n      }\n      if (variation.minSuggestedDuration) {\n        setTimeout(() => {\n          ressourceContainer.remove();\n        }, variation.minSuggestedDuration * 1000);\n      }\n    }\n    return variation;\n  });\n}\n", "/* eslint-disable max-len */\nimport Vast from '../index';\n/*\n* This method is responsible for rendering a nonlinear ad\n*/\nexport function playCompanionAd(creative) {\n  creative.variations.map((variation) => {\n    this.companionVastTracker.trackImpression(this.macros);\n\n    // image\n    if (variation.staticResources && variation.staticResources.length > 0) {\n      // variation.staticResources.map((staticResource) => {\n      //   const ressourceContainer = document.createElement('div');\n      //   this.domElements.push(ressourceContainer);\n      //   ressourceContainer.width = variation.staticResources.width > 0 ? variation.staticResources.width : 100;\n      //   ressourceContainer.height = variation.staticResources.height > 0 ? variation.staticResources.height : 100;\n      //   ressourceContainer.style.maxWidth = variation.staticResources.expandedWidth;\n      //   ressourceContainer.style.maxHeight = variation.staticResources.expandedHeight;\n      //   // Vast.applyNonLinearCommonDomStyle(ressourceContainer);\n\n      //   const ressource = document.createElement('img');\n      //   this.domElements.push(ressourceContainer);\n      //   ressource.addEventListener('click', () => {\n      //     window.open(variation.companionClickThroughURLTemplate, '_blank');\n      //     this.companionVastTracker.click(null, this.macros);\n      //   });\n      //   ressource.src = staticResource.url;\n      //   ressourceContainer.appendChild(ressource);\n      //   if (variation.adSlotID) {\n      //     document.querySelector(`#${variation.adSlotID}`).appendChild(ressourceContainer);\n      //   } else {\n      //     this.player.el().appendChild(ressourceContainer);\n      //   }\n      //   return staticResource;\n      // });\n    }\n\n    // html\n    if (variation.htmlResources) {\n      variation.htmlResources.map((htmlResource) => {\n        const ressourceContainer = document.createElement('div');\n        this.domElements.push(ressourceContainer);\n        ressourceContainer.width = variation.htmlResources.width;\n        ressourceContainer.height = variation.htmlResources.height;\n        ressourceContainer.style.maxWidth = variation.htmlResources.expandedWidth;\n        ressourceContainer.style.maxHeight = variation.htmlResources.expandedHeight;\n        // Vast.applyNonLinearCommonDomStyle(ressourceContainer);\n        ressourceContainer.addEventListener('click', () => {\n          window.open(variation.companionClickThroughURLTemplate, '_blank');\n          this.companionVastTracker.click(null, this.macros);\n        });\n        ressourceContainer.innerHTML = htmlResource;\n        if (variation.adSlotID) {\n          document.querySelector(`#${variation.adSlotID}`).appendChild(ressourceContainer);\n        } else {\n          this.player.el().appendChild(ressourceContainer);\n        }\n        return htmlResource;\n      });\n    }\n\n    // iframe\n    if (variation.iframeResources) {\n      variation.iframeResources.map((iframeResource) => {\n        const ressourceContainer = document.createElement('div');\n        this.domElements.push(ressourceContainer);\n        ressourceContainer.width = variation.iframeResources.width;\n        ressourceContainer.height = variation.iframeResources.height;\n        ressourceContainer.style.maxWidth = variation.iframeResources.expandedWidth;\n        ressourceContainer.style.maxHeight = variation.iframeResources.expandedHeight;\n        // Vast.applyNonLinearCommonDomStyle(ressourceContainer);\n        ressourceContainer.addEventListener('click', () => {\n          window.open(variation.companionClickThroughURLTemplate, '_blank');\n          this.companionVastTracker.click(null, this.macros);\n        });\n        ressourceContainer.src = iframeResource;\n        if (variation.adSlotID) {\n          document.querySelector(`#${variation.adSlotID}`).appendChild(ressourceContainer);\n        } else {\n          this.player.el().appendChild(ressourceContainer);\n        }\n        return iframeResource;\n      });\n    }\n    return variation;\n  });\n}\n", "import { isNumeric } from '../lib';\n\nexport function addIcons(ad) {\n  const { icons } = ad.linearCreative();\n  // is there some icons ?\n  if (icons && icons.length > 0) {\n    icons.forEach((icon) => {\n      const {\n        height, width, staticResource,\n        htmlResource, iframeResource, xPosition, yPosition, iconClickThroughURLTemplate, duration,\n      } = icon;\n      let iconContainer = null;\n      if (staticResource) {\n        // iconContainer = document.createElement('img');\n        // iconContainer.src = staticResource;\n        // iconContainer.height = height > 0 ? height : 100;\n        // iconContainer.width = width > 0 ? width : 100;\n      } else if (htmlResource) {\n        iconContainer = document.createElement('div');\n        iconContainer.innerHTML = icon.htmlResource;\n      } else if (iframeResource) {\n        iconContainer = document.createElement('iframe');\n        iconContainer.src = iframeResource;\n        iconContainer.height = height > 0 ? height : 100;\n        iconContainer.width = width > 0 ? width : 100;\n      }\n\n      iconContainer.style.zIndex = '1';\n      iconContainer.style.position = 'absolute';\n      // positioning (Y)\n      if (isNumeric(yPosition)) {\n        iconContainer.style.top = `${yPosition}px`;\n      } else {\n        iconContainer.style[['top', 'bottom'].includes(yPosition) ? yPosition : 'top'] = '3em';\n      }\n      // positioning (X)\n      if (isNumeric(xPosition)) {\n        iconContainer.style.left = `${xPosition}px`;\n      } else {\n        iconContainer.style[['right', 'left'].includes(xPosition) ? xPosition : 'left'] = 0;\n      }\n      // on click icon\n      if (iconClickThroughURLTemplate) {\n        iconContainer.style.cursor = 'pointer';\n        iconContainer.addEventListener('click', () => {\n          window.open(iconClickThroughURLTemplate, '_blank');\n          this.linearVastTracker.click(iconClickThroughURLTemplate, this.macros);\n        });\n      }\n      this.domElements.push(iconContainer);\n      this.player.el().appendChild(iconContainer);\n      // remove icon after the given duration\n      if (duration !== -1) {\n        const durationInSeconds = duration.split(':').reverse().reduce((prev, curr, i) => prev + curr * 60 ** i, 0);\n        setTimeout(() => {\n          this.player.el().removeChild(iconContainer);\n        }, durationInSeconds * 1000);\n      }\n    });\n  }\n}\n", "import { VASTParser } from '@dailymotion/vast-client';\nimport Vast from '../index';\nimport { fetchVmapUrl } from '../lib';\n\nexport function parseInlineVastData(vastAdData, adType) {\n  const xmlString = (new XMLSerializer()).serializeToString(vastAdData);\n  const vastXml = (new window.DOMParser()).parseFromString(xmlString, 'text/xml');\n  const vastParser = new VASTParser();\n  vastParser.parseVAST(vastXml)\n    .then((parsedVAST) => {\n      if (adType === 'postroll') {\n        // store for later use (in readyforpostroll event)\n        this.postRollData = parsedVAST.ads ?? [];\n      } else if (adType === 'preroll') {\n        this.adsArray = parsedVAST.ads ?? [];\n        this.player.trigger('adsready');\n      } else if (adType === 'midroll') {\n        // store for later use (in readyforpostroll event)\n        this.adsArray = parsedVAST.ads ?? [];\n        this.readAd();\n      }\n    })\n    .catch((err) => {\n      console.log('error', err);\n      if (adType === 'postroll' || adType === 'midroll') {\n        this.disablePostroll();\n      } else if (adType === 'preroll') {\n        // skip preroll, go ahaed to regular content\n        this.player.ads.skipLinearAdMode();\n      }\n    });\n}\n\nexport async function handleVmapXml(vmap){\n  try {\n    if (vmap.adBreaks && vmap.adBreaks.length > 0) {\n      this.addEventsListeners();\n      // handle preroll\n      const preroll = Vast.getPreroll(vmap.adBreaks);\n      if (!preroll) {\n        this.disablePreroll();\n      } else if (preroll.adSource?.adTagURI?.uri) {\n        // load vast preroll url\n        await this.handleVAST(preroll.adSource.adTagURI.uri);\n        // a preroll has been found, trigger adsready\n        this.player.trigger('adsready');\n      } else if (preroll.adSource.vastAdData) {\n        this.parseInlineVastData(preroll.adSource?.vastAdData, 'preroll');\n      }\n      // handle postroll\n      const postroll = Vast.getPostroll(vmap.adBreaks);\n      if (!postroll) {\n        this.disablePostroll();\n      } else if (postroll.adSource?.adTagURI?.uri) {\n        this.postRollUrl = postroll.adSource.adTagURI.uri;\n      } else if (postroll.adSource?.vastAdData) {\n        this.parseInlineVastData(postroll.adSource?.vastAdData, 'postroll');\n      }\n      this.watchForProgress = Vast.getMidrolls(vmap.adBreaks);\n      if (this.watchForProgress.length > 0) {\n        // listen on regular content for midroll handling\n        this.player.on('timeupdate', this.onProgress);\n      }\n    }\n  } catch (err) {\n    console.error(\"ERR\", err);\n  }\n}\n\nexport async function handleVMAP(vmapUrl) {\n  try {\n    const vmap = await fetchVmapUrl(vmapUrl);\n    if (vmap.adBreaks && vmap.adBreaks.length > 0) {\n      this.addEventsListeners();\n      // handle preroll\n      const preroll = Vast.getPreroll(vmap.adBreaks);\n      if (!preroll) {\n        this.disablePreroll();\n      } else if (preroll.adSource?.adTagURI?.uri) {\n        // load vast preroll url\n        await this.handleVAST(preroll.adSource.adTagURI.uri);\n        // a preroll has been found, trigger adsready\n        this.player.trigger('adsready');\n      } else if (preroll.adSource.vastAdData) {\n        this.parseInlineVastData(preroll.adSource?.vastAdData, 'preroll');\n      }\n      // handle postroll\n      const postroll = Vast.getPostroll(vmap.adBreaks);\n      if (!postroll) {\n        this.disablePostroll();\n      } else if (postroll.adSource?.adTagURI?.uri) {\n        this.postRollUrl = postroll.adSource.adTagURI.uri;\n      } else if (postroll.adSource?.vastAdData) {\n        this.parseInlineVastData(postroll.adSource?.vastAdData, 'postroll');\n      }\n      this.watchForProgress = Vast.getMidrolls(vmap.adBreaks);\n      if (this.watchForProgress.length > 0) {\n        // listen on regular content for midroll handling\n        this.player.on('timeupdate', this.onProgress);\n      }\n    }\n  } catch (err) {\n    // could not fetch vmap\n    console.error(\"ERR\", err);\n  }\n}\n", "import VMAP from \"../vmap\";\n\nexport const fetchAdUrl = (url) => new Promise((resolve, reject) => {\n  const xhr = new XMLHttpRequest();\n  xhr.open('GET', url);\n  xhr.send();\n  xhr.onreadystatechange = () => {\n    try {\n      if (xhr.readyState === xhr.DONE) {\n        if (xhr.status === 200) {\n            if(xhr.responseXML.documentElement.tagName.toLowerCase().includes(\"vmap\")){\n                const vmap = new VMAP(xhr.responseXML);\n                resolve({adType: \"vmap\", vmap: vmap});\n            }\n            resolve({xml :xhr.responseXML, adType: \"vast\"});\n        }\n      }\n    } catch (error) {\n      reject(error);\n    }\n  };\n  return [xhr, \"xhr\"]\n});\n"],
  "mappings": "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",
  "names": ["import_vast_client", "vmap_default", "vmap_default", "vmap_default", "videojs", "vastUrl"]
}
